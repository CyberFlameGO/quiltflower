package pkg;

public class TestPatternMatching17 {
   public void testSimple(Object obj) {
      if (obj instanceof String str) {// 5
         System.out.println(str.length());// 6
      }

   }// 8

   public void testInverted(Object obj) {
      if (!(obj instanceof String str)) {// 11
         System.out.println("Oh no");// 12
      }

   }// 14

   public void testCompound(Object obj) {
      if (obj instanceof String str && str.contains("hi")) {// 17
         System.out.println(str.length());// 18
      }

   }// 20

   public void testSimpleLoop(Object obj) {
      String str;
      while(obj instanceof String str) {// 24
         System.out.println(str.length());// 25
         obj = str.intern();// 26
      }

   }// 28

   public void testSimpleLoopUnused(Object obj) {
      String str;
      while(obj instanceof String str) {// 31
         obj = obj.hashCode() + "";// 32
      }

   }// 34

   public void testInvertedLoop(Object obj) {
      String str;
      while(!(obj instanceof String str)) {// 37
         System.out.println("Oh no");// 38
         obj = obj.toString();// 39
      }

      System.out.println(str.hashCode());// 41
   }

   public void testInvertedLoopUnused(Object obj) {
      String str;
      while(!(obj instanceof String str)) {// 45
         System.out.println("Oh no");// 46
         obj = obj.toString();// 47
      }

   }

   public void testCompoundLoop(Object obj) {
      String str;
      while(obj instanceof String str && str.contains("hi")) {// 52
         obj = str.substring(1);// 53
      }

   }// 55

   public boolean testReturn(Object obj) {
      return obj instanceof String s && s.length() > 5;// 58
   }

   public int testReturnTernary(Object obj) {
      return obj instanceof String s ? s.length() : 0;// 62
   }

   public int testReturnTernaryComplex(Object obj) {
      return (!(obj instanceof String s) || s.length() <= 5) && !(obj instanceof Integer) ? 1 : 4;// 66
   }

   public void testLoop(Object obj) {
      String s;
      while(obj instanceof String s && s.length() > 10) {// 70
         s = s.substring(1);// 71
         obj = s.substring(1);// 72
         System.out.println(s);// 74
      }

   }// 76

   public void testMessyLVT(Object obj) {
      str = "a";// 80
      String b = "b";// 81
      String c = "c";// 82
      String d = "d";// 83
      String e = "e";// 84
      String f = "f";// 85
      String g = "g";// 86
      String h = "h";// 87
      String var10 = "i";// 88
      if (obj instanceof String str) {// 90
         System.out.println(str.length());// 91
      }

   }// 93
}

class 'pkg/TestPatternMatching17' {
   method 'testSimple (Ljava/lang/Object;)V' {
      0      4
      1      4
      2      4
      3      4
      4      4
      b      4
      c      5
      d      5
      e      5
      f      5
      10      5
      11      5
      12      5
      13      5
      16      8
   }

   method 'testInverted (Ljava/lang/Object;)V' {
      0      11
      1      11
      2      11
      3      11
      4      11
      b      11
      f      12
      10      12
      11      12
      12      12
      13      12
      14      12
      17      15
   }

   method 'testCompound (Ljava/lang/Object;)V' {
      0      18
      1      18
      2      18
      3      18
      4      18
      b      18
      c      18
      d      18
      e      18
      f      18
      10      18
      11      18
      12      18
      15      19
      16      19
      17      19
      18      19
      19      19
      1a      19
      1b      19
      1c      19
      1f      22
   }

   method 'testSimpleLoop (Ljava/lang/Object;)V' {
      0      26
      1      26
      2      26
      3      26
      b      26
      c      27
      d      27
      e      27
      f      27
      10      27
      11      27
      12      27
      13      27
      14      27
      15      27
      16      28
      17      28
      18      28
      19      28
      1a      28
      1e      31
   }

   method 'testSimpleLoopUnused (Ljava/lang/Object;)V' {
      0      35
      1      35
      2      35
      3      35
      b      35
      c      36
      d      36
      e      36
      f      36
      10      36
      11      36
      12      36
      13      36
      14      36
      15      36
      19      39
   }

   method 'testInvertedLoop (Ljava/lang/Object;)V' {
      0      43
      1      43
      2      43
      3      43
      4      43
      b      43
      c      48
      d      48
      e      48
      f      44
      10      44
      11      44
      12      44
      13      44
      14      44
      15      44
      16      44
      17      45
      18      45
      19      45
      1a      45
      1b      45
      1c      48
      1d      48
      1e      48
      1f      48
      20      48
      21      48
      22      48
      23      48
      24      48
      25      48
      26      49
      27      49
      28      49
   }

   method 'testInvertedLoopUnused (Ljava/lang/Object;)V' {
      0      53
      1      53
      2      53
      3      53
      4      53
      b      53
      c      58
      d      58
      e      58
      f      54
      10      54
      11      54
      12      54
      13      54
      14      54
      15      54
      16      54
      17      55
      18      55
      19      55
      1a      55
      1b      55
      1c      58
      1d      58
      1e      58
   }

   method 'testCompoundLoop (Ljava/lang/Object;)V' {
      0      62
      1      62
      2      62
      3      62
      b      62
      c      62
      d      62
      e      62
      f      62
      10      62
      11      62
      15      63
      16      63
      17      63
      18      63
      19      63
      1a      63
      1e      66
   }

   method 'testReturn (Ljava/lang/Object;)Z' {
      0      69
      1      69
      2      69
      3      69
      b      69
      c      69
      d      69
      e      69
      f      69
      10      69
      11      69
      19      69
   }

   method 'testReturnTernary (Ljava/lang/Object;)I' {
      0      73
      1      73
      2      73
      3      73
      4      73
      b      73
      c      73
      d      73
      e      73
      f      73
      13      73
      14      73
   }

   method 'testReturnTernaryComplex (Ljava/lang/Object;)I' {
      0      77
      1      77
      2      77
      3      77
      4      77
      b      77
      c      77
      d      77
      e      77
      f      77
      10      77
      11      77
      14      77
      15      77
      16      77
      17      77
      18      77
      1b      77
      1f      77
      20      77
   }

   method 'testLoop (Ljava/lang/Object;)V' {
      0      82
      1      82
      2      82
      3      82
      b      82
      c      82
      d      82
      e      82
      f      82
      10      82
      11      82
      12      82
      15      83
      16      83
      17      83
      18      83
      19      83
      1a      83
      1b      84
      1c      84
      1d      84
      1e      84
      1f      84
      20      84
      21      85
      22      85
      23      85
      24      85
      25      85
      26      85
      27      85
      2b      88
   }

   method 'testMessyLVT (Ljava/lang/Object;)V' {
      0      91
      1      91
      2      91
      3      92
      4      92
      5      92
      6      93
      7      93
      8      93
      9      93
      a      94
      b      94
      c      94
      d      94
      e      95
      f      95
      10      95
      11      95
      12      96
      13      96
      14      96
      15      96
      16      97
      17      97
      18      97
      19      97
      1a      98
      1b      98
      1c      98
      1d      98
      1e      99
      1f      99
      20      99
      21      99
      22      100
      23      100
      24      100
      25      100
      26      100
      2d      100
      2e      101
      2f      101
      30      101
      31      101
      32      101
      33      101
      34      101
      35      101
      38      104
   }
}

Lines mapping:
5 <-> 5
6 <-> 6
8 <-> 9
11 <-> 12
12 <-> 13
14 <-> 16
17 <-> 19
18 <-> 20
20 <-> 23
24 <-> 27
25 <-> 28
26 <-> 29
28 <-> 32
31 <-> 36
32 <-> 37
34 <-> 40
37 <-> 44
38 <-> 45
39 <-> 46
41 <-> 49
45 <-> 54
46 <-> 55
47 <-> 56
52 <-> 63
53 <-> 64
55 <-> 67
58 <-> 70
62 <-> 74
66 <-> 78
70 <-> 83
71 <-> 84
72 <-> 85
74 <-> 86
76 <-> 89
80 <-> 92
81 <-> 93
82 <-> 94
83 <-> 95
84 <-> 96
85 <-> 97
86 <-> 98
87 <-> 99
88 <-> 100
90 <-> 101
91 <-> 102
93 <-> 105
Not mapped:
42
49
