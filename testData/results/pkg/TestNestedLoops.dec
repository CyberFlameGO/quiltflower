package pkg;

import java.util.ArrayList;
import java.util.List;

public class TestNestedLoops {
   public void test() {
      List<String> list = new ArrayList<>();// 8
      int i = 0;// 9

      while(true) {
         while(i >= 10) {// 11
         }

         for(String s : list) {// 12
            for(int j = 0; j < 20; ++j) {// 13
               while(true) {
                  s.substring(j);// 15
                  if (s.length() >= j) {// 16
                     break;
                  }
               }
            }
         }

         ++i;// 19
      }
   }

   public void decomp() {
      List<String> list = new ArrayList<>();// 25
      int i = 0;// 26

      while(true) {
         if (i < 10) {// 29
            for(String s : list) {// 32
               for(int j = 0; j < 20; ++j) {// 33
                  while(true) {
                     s.substring(j);// 35
                     if (s.length() >= j) {// 36
                        break;
                     }
                  }
               }
            }

            ++i;// 43
            continue;
         }
      }
   }
}

class 'pkg/TestNestedLoops' {
   method 'test ()V' {
      7      7
      8      8
      9      8
      a      11
      b      11
      c      11
      d      11
      10      14
      11      14
      12      14
      13      14
      14      14
      15      14
      16      14
      20      14
      21      14
      22      14
      23      14
      24      14
      25      14
      26      14
      27      14
      28      14
      29      14
      2a      14
      2b      15
      2c      15
      2d      15
      2e      15
      2f      15
      30      15
      31      15
      32      15
      35      17
      36      17
      37      17
      38      17
      39      17
      3a      17
      3b      17
      3d      18
      3e      18
      3f      18
      40      18
      41      18
      42      18
      43      18
      44      18
      47      15
      48      15
      49      15
      50      25
      51      25
      52      25
   }

   method 'decomp ()V' {
      7      30
      8      31
      9      31
      a      34
      b      34
      c      34
      d      34
      13      35
      14      35
      15      35
      16      35
      17      35
      18      35
      19      35
      23      35
      24      35
      25      35
      26      35
      27      35
      28      35
      29      35
      2a      35
      2b      35
      2c      35
      2d      35
      2e      36
      2f      36
      30      36
      31      36
      32      36
      33      36
      34      36
      35      36
      38      38
      39      38
      3a      38
      3b      38
      3c      38
      3d      38
      3e      38
      40      39
      41      39
      42      39
      43      39
      44      39
      45      39
      46      39
      47      39
      4d      36
      4e      36
      4f      36
      56      46
      57      46
      58      46
      59      47
   }
}

Lines mapping:
8 <-> 8
9 <-> 9
11 <-> 12
12 <-> 15
13 <-> 16
15 <-> 18
16 <-> 19
19 <-> 26
25 <-> 31
26 <-> 32
29 <-> 35
32 <-> 36
33 <-> 37
35 <-> 39
36 <-> 40
43 <-> 47
Not mapped:
18
37
41
